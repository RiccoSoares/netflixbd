DROP TABLE IF EXISTS REGIAO CASCADE;
DROP TABLE IF EXISTS CONTA CASCADE;
DROP TABLE IF EXISTS PERFIL CASCADE;
DROP TABLE IF EXISTS GENERO CASCADE;
DROP TABLE IF EXISTS PERFIL_PREFERE CASCADE;
DROP TABLE IF EXISTS DIRETOR CASCADE;
DROP TABLE IF EXISTS ATOR CASCADE;
DROP TABLE IF EXISTS CONTEUDO CASCADE;
DROP TABLE IF EXISTS LISTA_PERFIL CASCADE;
DROP TABLE IF EXISTS MOTIVO_RECOMENDACAO CASCADE;
DROP TABLE IF EXISTS RECOMENDACOES_PERFIL CASCADE;
DROP TABLE IF EXISTS DISPONIVEL_PARA CASCADE;
DROP TABLE IF EXISTS ESTRELANDO CASCADE;
DROP TABLE IF EXISTS DO_GENERO CASCADE;
DROP TABLE IF EXISTS DIRIGIDO_POR CASCADE;
DROP TABLE IF EXISTS ASSISTIR CASCADE;

CREATE TABLE REGIAO
	(nome VARCHAR(200) NOT NULL,
PRIMARY KEY(nome));
 
CREATE TABLE  CONTA
	(email VARCHAR(254) NOT NULL,
	plano NUMERIC(3) NOT NULL,
	telasonline NUMERIC(1) NOT NULL,
	cpf NUMERIC(11) NOT NULL UNIQUE,
	cartao_titular VARCHAR(26) NOT NULL,
	cartao_numero NUMERIC(19) NOT NULL,
	cartao_cvv NUMERIC(4) NOT NULL,
	cartao_val DATE NOT NULL,
	senha VARCHAR(64) NOT NULL,
PRIMARY KEY (email));

CREATE TABLE PERFIL
	(email_conta VARCHAR(254) NOT NULL,
	nome VARCHAR(50) NOT NULL,
	imagem VARCHAR(255) NOT NULL,
	regiao VARCHAR(20),
PRIMARY KEY(email_conta, nome),
FOREIGN KEY(email_conta) REFERENCES CONTA(email));

CREATE TABLE GENERO
	(nome VARCHAR(30) NOT NULL,
PRIMARY KEY(nome));

CREATE TABLE PERFIL_PREFERE --preferencia do usuario por generos
	(email_perfil VARCHAR(254) NOT NULL,
	nome_perfil VARCHAR(50) NOT NULL,
	nome_genero VARCHAR(30) NOT NULL,
	ordem NUMERIC(3) NOT NULL UNIQUE,
PRIMARY KEY(email_perfil, nome_perfil, nome_genero),
FOREIGN KEY(email_perfil, nome_perfil) REFERENCES PERFIL(email_conta, nome),
FOREIGN KEY(nome_genero) REFERENCES GENERO(nome));
 
CREATE TABLE DIRETOR
	(nome VARCHAR(150) NOT NULL,
PRIMARY KEY (nome));

CREATE TABLE ATOR
	(nome VARCHAR(150) NOT NULL,
PRIMARY KEY (nome));

CREATE TABLE CONTEUDO
	(id VARCHAR(30) NOT NULL,
	nome VARCHAR(150) NOT NULL,
	ano NUMERIC(4) NOT NULL,
	sinopse VARCHAR(400) NOT NULL,
	poster NUMERIC(5) NOT NULL UNIQUE,
	ci NUMERIC(2) NOT NULL,
	visu INT NOT NULL,
	original BOOLEAN NOT NULL,
PRIMARY KEY (id));

CREATE TABLE LISTA_PERFIL --lista de conteudos ("para ver depois") de um perfil
	(email_perfil VARCHAR(254) NOT NULL,
	nome_perfil VARCHAR(50) NOT NULL,
	id_conteudo VARCHAR(30) NOT NULL,
PRIMARY KEY(email_perfil, nome_perfil, id_conteudo),
FOREIGN KEY(email_perfil, nome_perfil) REFERENCES PERFIL(email_conta, nome),
FOREIGN KEY(id_conteudo) REFERENCES CONTEUDO(id));

CREATE TABLE MOTIVO_RECOMENDACAO --tabela de motivos pre-especificados pelos quais um conteudo pode ser recomendado a um usuario
	(motivo VARCHAR(50) NOT NULL,
PRIMARY KEY(motivo));

CREATE TABLE RECOMENDACOES_PERFIL --tabela de conteudos recomendados especificamente para um perifl
	(email_perfil VARCHAR(254) NOT NULL,
	nome_perfil VARCHAR(50) NOT NULL,
	id_conteudo VARCHAR(30) NOT NULL,
	motivo VARCHAR(30) NOT NULL,
PRIMARY KEY(email_perfil, nome_perfil, id_conteudo),
FOREIGN KEY(email_perfil, nome_perfil) REFERENCES PERFIL(email_conta, nome),
FOREIGN KEY(motivo) REFERENCES MOTIVO_RECOMENDACAO(motivo));
	
CREATE TABLE DISPONIVEL_PARA --disponibilidade de obra em regioes
	(conteudo_id VARCHAR(30) NOT NULL,
	regiao_nome VARCHAR(200) NOT NULL,
PRIMARY KEY(conteudo_id, regiao_nome),
FOREIGN KEY(conteudo_id) REFERENCES CONTEUDO(id) ON DELETE CASCADE,
FOREIGN KEY(regiao_nome) REFERENCES REGIAO(nome) ON DELETE CASCADE);

CREATE TABLE ESTRELANDO --atores presentes em obra
	(conteudo_id VARCHAR(30) NOT NULL,
	ator_nome VARCHAR(150) NOT NULL,
PRIMARY KEY(conteudo_id, ator_nome),
FOREIGN KEY(conteudo_id) REFERENCES CONTEUDO(id) ON DELETE CASCADE,
FOREIGN KEY(ator_nome) REFERENCES ATOR(nome) ON DELETE CASCADE);

CREATE TABLE DO_GENERO --generos da obra
	(conteudo_id VARCHAR(30) NOT NULL,
	genero_nome VARCHAR(30) NOT NULL,
PRIMARY KEY(conteudo_id, genero_nome),
FOREIGN KEY(conteudo_id) REFERENCES CONTEUDO(id) ON DELETE CASCADE,
FOREIGN KEY (genero_nome) REFERENCES GENERO(nome) ON DELETE CASCADE);

CREATE TABLE DIRIGIDO_POR --diretores da obra
	(conteudo_id VARCHAR(30) NOT NULL,
	nome_diretor VARCHAR(150) NOT NULL,
PRIMARY KEY(conteudo_id, nome_diretor),
FOREIGN KEY(conteudo_id) REFERENCES CONTEUDO(id) ON DELETE CASCADE,
FOREIGN KEY(nome_diretor) REFERENCES DIRETOR(nome) ON DELETE CASCADE);
	
CREATE TABLE ASSISTIR 
	(email_conta VARCHAR(254) NOT NULL,
	conteudo_id VARCHAR(30) NOT NULL,
	assitido_comp BOOLEAN NOT NULL,
	feedback CHAR(8),
	ultimo_ep_visto CHAR(6),
	no_tempo NUMERIC(4),
	relevancia NUMERIC(100),
PRIMARY KEY(email_conta, conteudo_id),
FOREIGN KEY(email_conta) REFERENCES CONTA(email) ON DELETE CASCADE,
FOREIGN KEY(conteudo_id) REFERENCES CONTEUDO(id) ON DELETE CASCADE);
	
	

	

SELECT * FROM REGIAO;
SELECT * FROM CONTA;
SELECT * FROM PERFIL;
SELECT * FROM GENERO;
SELECT * FROM PERFIL_PREFERE;
SELECT * FROM DIRETOR;
SELECT * FROM ATOR;
SELECT * FROM CONTEUDO;
SELECT * FROM LISTA_PERFIL;
SELECT * FROM MOTIVO_RECOMENDACAO;
SELECT * FROM RECOMENDACOES_PERFIL;
SELECT * FROM DISPONIVEL_PARA;
SELECT * FROM ESTRELANDO;
SELECT * FROM DO_GENERO;
SELECT * FROM DIRIGIDO_POR;
SELECT * FROM ASSISTIR;


